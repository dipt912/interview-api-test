{"version":3,"sources":["logo.svg","api-service/index.js","api-service/api.js","App/Component/UserType/index.js","App/Component/CreateUser/index.js","App/Component/ConfirmationComp/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["API","this","instance","axios","create","baseURL","timeout","headers","method","url","params","data","console","log","message","stack","getEvents","a","createRequest","res","postEvent","UserType","props","state","event","preventDefault","target","value","name","setState","handleInputChange","userTypes","user_types","extra_text_inputs","handleChange","extraInput","classes","Grid","xs","FormControl","variant","className","formControl","InputLabel","id","Select","labelId","fullWidth","onChange","MenuItem","map","ele","i","length","element","item","TextField","label","required","handleExtraField","bind","Component","withStyles","theme","minWidth","marginTop","spacing","marginBottom","textAlign","width","color","palette","text","secondary","selectEmpty","CreateUser","forceUpdate","handleExtraInputChange","obj","extra_inputs","handleSubmit","buildRequest","Object","keys","history","push","pathname","customNameData","LastName","FirstName","Email","isLoading","metaData","req","first_name","last_name","email","type","Fragment","Paper","paper","root","autoComplete","onSubmit","helperText","Button","onClick","disabled","withRouter","margin","padding","ConfirmedUser","redirectToHome","App","init","path","ConfirmationComp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c40e12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\n\n\nexport default class API {\n\n    static init() {\n        this.instance = axios.create({\n            baseURL: 'https://my-json-server.typicode.com/jason-ogasian-walmart/interview-api',\n            timeout: 15000,\n            headers: {\n                'Access-Control-Allow-Origin': 'https://my-json-server.typicode.com/jason-ogasian-walmart/interview-api',\n                'Access-Control-Allow-Credentials': true,\n                'Content-Type': 'application/json',\n            },\n            // withCredentials: true\n        });\n    }\n\n    static getInstance() {\n        return this.instance;\n    }\n\n\n    static async createRequest({method = 'GET', url, params = null, data = null}) {\n        try {\n            return await this.instance({\n                method,\n                url,\n                data,\n                params\n            })\n        } catch (err) {\n            console.log('error', err)\n            throw {\n                message: 'Network Error',\n                stack: err\n            }\n        }\n    }\n}\n","import API from \"./index\";\n\n\nexport const getEvents = async () => {\n    try {\n        const res = await API.createRequest({\n            url: '/user_create',\n            method: 'GET'\n        });\n        return res.data;\n    } catch (e) {\n        console.log('getEvents error', e);\n        throw e;\n    }\n};\n\nexport const postEvent = async (data) => {\n    try {\n        console.log(\"post \", data)\n        const res = await API.createRequest({\n            url: '/update_user',\n            method: 'POST',\n            data: data\n        });\n\n        return res.data\n    } catch (e) {\n        console.log('getEvents error', e);\n        throw e;\n    }\n};\n\n\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = theme => ({\n    formControl: {\n        minWidth: 40,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        textAlign: 'center',\n        width: '96vW',\n        color: theme.palette.text.secondary,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n});\nclass UserType extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    handleExtraField(event) {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        console.log('name', name, value)\n        this.setState({\n            [name]: value\n        });\n        console.log('state', this.state)\n        this.props.handleInputChange(event);\n    }\n\n    render() {\n        const { userTypes, user_types, extra_text_inputs, handleChange } = this.props;\n        const extraInput = extra_text_inputs[user_types];\n        const { classes } = this.props;\n\n        return (\n            <Grid xs={12}>\n                <FormControl  variant=\"outlined\"  className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-filled-label\">User Types</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-filled-label\"\n                        id=\"demo-simple-select-filled\"\n                        fullWidth=\"true\" \n                        value={user_types} onChange={handleChange}\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {userTypes.map((ele, i) =>\n                            <MenuItem key={i} value={ele}>{ele}</MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n\n                {extraInput && extraInput.length && (\n                    extraInput.map((element, i) => {\n                        return (\n                            <Grid item xs={12}>\n                                <TextField\n                                    id={element.value}\n                                    label={element.label}\n                                    name={element.value}\n                                    fullWidth=\"true\"\n                                    required=\"true\"\n                                    variant=\"outlined\"\n                                    value={this.state[element.value] || ''}\n                                    onChange={this.handleExtraField.bind(this)} />\n                            </Grid>\n                        )\n                    })\n                )}\n            </Grid>\n        )\n    }\n\n}\n\n// export default UserType;\nexport default withStyles(useStyles)(UserType)","import React, { Component } from 'react';\nimport { postEvent, getEvents } from \"../../../api-service/api\";\nimport UserType from '../UserType';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withRouter } from 'react-router-dom'\n\n\nconst useStyles = theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100vW',\n        },\n    },\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass CreateUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            LastName: '',\n            FirstName: '',\n            Email: '',\n            user_types: '',\n            userTypes: [],\n            extra_text_inputs: {},\n            isLoading: false,\n            extra_inputs: {}\n        }\n    }\n\n    handleInputChange = (event) => {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.forceUpdate()\n        });\n    }\n\n    handleExtraInputChange = (event) => {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        const obj = {}\n        obj[name] = value;\n        this.setState({\n            extra_inputs: { ...obj }\n        }, () => {\n            this.forceUpdate()\n        });\n    }\n\n\n    async componentDidMount() {\n        const metaData = await getEvents();\n        this.setState({\n            userTypes: metaData.user_types,\n            extra_text_inputs: metaData.extra_text_inputs\n        });\n    }\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        const data = await postEvent(this.buildRequest())\n        if (data && Object.keys(data).length) {\n            let { history } = this.props;\n            history.push({\n                pathname: '/confirmed-user',\n                customNameData: data\n            })\n        }\n\n    }\n    buildRequest() {\n\n        let req = {\n\n        }\n        if (Object.keys(this.state.extra_inputs).length) {\n            req = this.state.extra_inputs;\n        }\n\n        req = {\n            ...req,\n            first_name: this.state.FirstName,\n            last_name: this.state.LastName,\n            email: this.state.Email,\n            type: this.state.user_types\n        }\n        console.log('req', req);\n        return req;\n    }\n    handleChange(event) {\n        const type = event.target.value;\n        this.setState({\n            user_types: type\n        }, (state) => {\n            this.forceUpdate()\n        });\n\n    }\n\n\n\n    render() {\n        const { isLoading, LastName, FirstName, Email, userTypes, extra_text_inputs, user_types } = this.state;\n        const { classes } = this.props;\n        return (\n\n            <React.Fragment>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <div className={'form'} >\n                            <form className={classes.root} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                {/* <div className={'form-content'}> */}\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id=\"lastName\"\n                                        label=\"Last Name\"\n                                        name=\"LastName\"\n                                        fullWidth=\"true\"\n                                        variant=\"outlined\"\n                                        value={LastName}\n                                        helperText=\"Required Field\"\n                                        onChange={this.handleInputChange} />\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id=\"firstName\"\n                                        label=\"First Name\"\n                                        name=\"FirstName\"\n                                        fullWidth=\"true\"\n                                        variant=\"outlined\"\n                                        value={FirstName}\n                                        helperText=\"Required Field\"\n                                        onChange={this.handleInputChange} />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        id=\"Email\"\n                                        label=\"Email\"\n                                        name=\"Email\"\n                                        fullWidth=\"true\"\n                                        variant=\"outlined\"\n                                        value={Email}\n                                        helperText=\"Required Field\"\n                                        onChange={this.handleInputChange} />\n                                </Grid>\n                                {userTypes &&\n                                    <UserType\n                                        userTypes={userTypes}\n                                        extra_text_inputs={extra_text_inputs}\n                                        user_types={user_types}\n                                        handleChange={this.handleChange.bind(this)}\n                                        handleInputChange={this.handleExtraInputChange.bind(this)} />}\n                                {/* </div> */}\n                                <div className={'buttons-row'}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                        onClick={this.handleSubmit}\n                                        disabled={isLoading}>\n                                        Submit\n                        </Button>\n                                </div>\n                            </form>\n                        </div>\n                    </Paper>\n                </Grid>\n\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles)(CreateUser))\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100vW',\n        },\n    },\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass ConfirmedUser extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    redirectToHome(event) {\n        event.preventDefault()\n        let { history } = this.props;\n        history.push('interview-api-test')\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <h2>User Successfully Created</h2>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={this.redirectToHome.bind(this)}\n                >\n                    Create User\n                        </Button>\n            </div>\n\n        )\n\n    }\n}\n\n\nexport default withRouter(withStyles(useStyles)(ConfirmedUser))","import logo from '../logo.svg';\nimport './index.css';\nimport { Component } from 'react';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport CreateUser from './Component/CreateUser';\nimport API from '../api-service';\nimport ConfirmationComp from './Component/ConfirmationComp';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    API.init()\n  }\n  render() {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h4> Create User </h4>\n          </header>\n          <BrowserRouter>\n            <Switch>\n            <Route  path=\"/confirmed-user\">\n                <ConfirmationComp/>\n              </Route>\n              <Route  path=\"/interview-api-test\">\n                <CreateUser />\n              </Route>\n              <Route path=\"/\">\n                <CreateUser />\n              </Route>\n            </Switch>\n      </BrowserRouter>\n\n        </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}