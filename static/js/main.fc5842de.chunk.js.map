{"version":3,"sources":["logo.svg","api-service/index.js","api-service/api.js","App/Component/UserType/index.js","App/Component/CreateUser/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["API","this","instance","axios","create","baseURL","timeout","headers","method","url","params","data","console","log","message","stack","getEvents","a","createRequest","res","postEvent","UserType","props","state","event","preventDefault","target","value","name","setState","handleInputChange","userTypes","user_types","extra_text_inputs","handleChange","extraInput","onChange","map","ele","i","length","element","className","htmlFor","label","id","handleExtraField","bind","Component","CreateUser","forceUpdate","handleExtraInputChange","obj","extra_inputs","handleSubmit","buildRequest","LastName","FirstName","Email","isLoading","metaData","req","Object","keys","first_name","last_name","email","type","onSubmit","Button","variant","color","onClick","disabled","App","init","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc5842de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\n\n\nexport default class API {\n\n    static init() {\n        this.instance = axios.create({\n            baseURL: 'https://my-json-server.typicode.com/jason-ogasian-walmart/interview-api',\n            timeout: 15000,\n            headers: {\n                'Access-Control-Allow-Origin': 'https://my-json-server.typicode.com/jason-ogasian-walmart/interview-api',\n                'Access-Control-Allow-Credentials': true,\n                'Content-Type': 'application/json',\n            },\n            // withCredentials: true\n        });\n    }\n\n    static getInstance() {\n        return this.instance;\n    }\n\n\n    static async createRequest({method = 'GET', url, params = null, data = null}) {\n        try {\n            return await this.instance({\n                method,\n                url,\n                data,\n                params\n            })\n        } catch (err) {\n            console.log('error', err)\n            throw {\n                message: 'Network Error',\n                stack: err\n            }\n        }\n    }\n}\n","import API from \"./index\";\n\n\nexport const getEvents = async () => {\n    try {\n        const res = await API.createRequest({\n            url: '/user_create',\n            method: 'GET'\n        });\n        return res.data;\n    } catch (e) {\n        console.log('getEvents error', e);\n        throw e;\n    }\n};\n\nexport const postEvent = async (data) => {\n    try {\n        console.log(\"post \", data)\n        const res = await API.createRequest({\n            url: '/update_user',\n            method: 'POST',\n            data: data\n        });\n\n        return res.data\n    } catch (e) {\n        console.log('getEvents error', e);\n        throw e;\n    }\n};\n\n\n","import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n  \nclass UserType extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    handleExtraField(event) {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n        this.props.handleInputChange(event);\n    }\n\n    render() {\n        const {userTypes, user_types, extra_text_inputs, handleChange} = this.props;\n        const extraInput = extra_text_inputs[user_types];\n        \n        return(\n            <div>\n            <p> User Types: </p>\n            <select name='user_types' value={user_types} onChange={handleChange}> \n              { userTypes.map((ele, i) => \n                   <option  key={i} value={ele}>{ele}</option>\n              )}\n          </select>\n         { extraInput && extraInput.length && (\n             extraInput.map((element, i) => {\n                 return (\n                    <div className=\"form-item\"  key={i}>\n                    <label htmlFor={element.value} className=\"form-item-label\">{element.label}</label>\n                    <input className=\"form-item-input\" id=\"Email\"\n                           name={element.value}\n                           value= {this.state[element.value]|| ''}\n                           onChange={this.handleExtraField.bind(this)}\n                    />\n                </div>\n                 )\n             })\n         )}\n          </div>\n        )\n    }\n\n}\n\nexport default UserType;","import React, {Component} from 'react';\nimport { postEvent, getEvents} from \"../../../api-service/api\";\nimport UserType from '../UserType';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CreateUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            LastName: '',\n            FirstName: '',\n            Email: '',\n            user_types: '',\n            userTypes: [],\n            extra_text_inputs: {},\n            isLoading: false,\n            extra_inputs : {}\n        }\n    }\n\n    handleInputChange = (event) => {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        },() => {\n            this.forceUpdate()\n        });\n    }\n\n    handleExtraInputChange = (event) => {\n        event.preventDefault()\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        const obj = {}\n        obj[name] = value;\n        this.setState({\n            extra_inputs: { ...obj}\n        },() => {\n            this.forceUpdate()\n        });\n    }\n\n\n    async componentDidMount() {\n        const metaData =   await getEvents();\n        this.setState({\n            userTypes: metaData.user_types,\n            extra_text_inputs: metaData.extra_text_inputs\n        });\n    }\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        postEvent(this.buildRequest())\n        // this.setState({isLoading: true}, async () => {\n        //     this.setState({isLoading: false})\n        // })\n    }\n    buildRequest() {\n\n       let req =  { \n           \n        }\n        if(Object.keys(this.state.extra_inputs).length) {\n            req = this.state.extra_inputs;\n        }\n\n        req = {\n            ...req,\n             first_name: this.state.FirstName,\n            last_name: this.state.LastName,\n            email: this.state.Email,\n            type: this.state.user_types\n        }\n       console.log('req', req);\n        return req;\n    }\n    handleChange(event) {\n        const type= event.target.value;\n        this.setState({\n            user_types: type\n        }, (state) => {\n            this.forceUpdate()\n        });\n\n    }\n\n   \n\n    render() {\n        const {isLoading, LastName, FirstName, Email , userTypes, extra_text_inputs, user_types} = this.state;\n\n        return  (\n            <div className={'form'}>\n                <form  onSubmit={this.handleSubmit}>\n                    <div className={'form-content'}>\n                        <div className=\"form-item\">\n                            <label htmlFor=\"lastName\" className=\"form-item-label\">Last Name</label>\n                            <input className=\"form-item-input\" id=\"lastName\"\n                                   name=\"LastName\"\n                                   value={LastName}\n                                   onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-item\">\n                            <label htmlFor=\"firstName\" className=\"form-item-label\">First Name</label>\n                            <input className=\"form-item-input\" id=\"firstName\"\n                                   name=\"FirstName\"\n                                   value={FirstName}\n                                   onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-item\">\n                            <label htmlFor=\"Email\" className=\"form-item-label\">Email Address</label>\n                            <input className=\"form-item-input\" id=\"Email\"\n                                   name=\"Email\"\n                                   value={Email}\n                                   onChange={this.handleInputChange}\n                            />\n                        </div>\n                        {userTypes &&\n                            <UserType \n                                 userTypes = {userTypes}  \n                                 extra_text_inputs= {extra_text_inputs} \n                                 user_types={user_types}\n                                 handleChange={this.handleChange.bind(this)}\n                                 handleInputChange = {this.handleExtraInputChange.bind(this)} />}\n                    </div>\n                    <div className={'buttons-row'}>\n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            type=\"submit\" \n                            onClick={this.handleSubmit} \n                            disabled={isLoading}>\n                                    Submit\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        ) ;\n    }\n}\n\nexport default CreateUser;\n","import logo from '../logo.svg';\nimport './index.css';\nimport {Component} from 'react';\nimport CreateUser from './Component/CreateUser';\nimport API from '../api-service';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    API.init()\n}\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h4> Create User </h4>\n        </header>\n        <CreateUser />\n      </div>\n    );\n  }\n  }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}